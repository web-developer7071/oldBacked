# Generated by Django 3.2.6 on 2022-03-18 20:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DoctorDetail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('DIN', models.CharField(blank=True, max_length=8, unique=True)),
                ('State', models.CharField(choices=[('', 'Select State'), ('ANI', 'Andman & Nicobar Islands'), ('ANP', 'Andhra Pradesh'), ('ARP', 'Arunachal Pradesh'), ('ASM', 'Assam'), ('BHR', 'Bihar'), ('CHN', 'Chandigarh'), ('CHT', 'Chhattisgarh'), ('DNH', 'Dadra & Nagr Haveli'), ('DMD', 'Daman & Diu'), ('DLH', 'Delhi'), ('GOA', 'Goa'), ('GUJ', 'Gujrat'), ('HRN', 'Haryana'), ('HMP', 'Himachal Pradesh'), ('JMK', 'Jammu & Kashmir'), ('JRK', 'Jharkhand'), ('KRT', 'Karnataka'), ('KRL', 'Kerala'), ('LDP', 'Lakshadweep'), ('MDP', 'Madhya Pradesh'), ('MHR', 'Maharashtra'), ('MNP', 'Manipur'), ('MGL', 'Meghalaya'), ('MZR', 'Mizoram'), ('NGL', 'Nagaland'), ('ODS', 'Odisha'), ('PDC', 'Puducherry'), ('PJB', 'Punjab'), ('RJS', 'Rajasthan'), ('SKM', 'Sikkim'), ('TMN', 'Tamil Nadu'), ('TLG', 'Telangana'), ('TRP', 'Tripura'), ('UTK', 'Uttarakhand'), ('UTP', 'Uttar Pradesh'), ('WSB', 'West Bengal')], max_length=30)),
                ('Image', models.ImageField(default='doctorAvatar.png', upload_to='Doctor_img/')),
                ('Name', models.CharField(max_length=50)),
                ('Type', models.CharField(choices=[('', "Doctor's Type"), ('Dentist', 'Dentist'), ('ENT', 'Ear & Nose Throught'), ('Gynaecologist', 'Gynaecologist'), ('Orthopaedic surgeon', 'Orthopaedic surgeon'), ('Paediatrician', 'Paediatrician'), ('Psychiatrists', 'Psychiatrists'), ('Physician', 'Physician'), ('Neurologist', 'Neurologist'), ('Cardiologist', 'Cardiologist'), ('Radiologist', 'Radiologist'), ('Pulmonologist', 'Pulmonologist'), ('Endocrinologist', 'Endocrinologist'), ('Oncologist', 'Oncologist'), ('Cardiothoracic', 'Cardiothoracic'), ('Veterinarian', 'Veterinarian')], max_length=30)),
                ('Degree', models.CharField(max_length=200)),
                ('Prescription_Limit', models.PositiveIntegerField()),
                ('Other_Info', models.CharField(blank=True, max_length=150)),
                ('Consultation_Fees', models.PositiveIntegerField()),
                ('Emergency_Fees', models.PositiveIntegerField(blank=True)),
                ('Seating_Days', models.CharField(max_length=50)),
                ('Seating_Time', models.CharField(max_length=20)),
                ('Lunch_Tmie', models.CharField(max_length=20)),
                ('Operation_Time', models.CharField(blank=True, max_length=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='HospitalData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('Hospital_Name', models.CharField(max_length=150)),
                ('Hospital_Logo', models.ImageField(blank=True, default='hospitalLogo.png', upload_to='hospital_logoimg/')),
                ('Hospital_Type', models.CharField(choices=[('', 'Hospital Type'), ('Single', 'Single'), ('Multy', 'Multy Specilist')], max_length=10)),
                ('Address', models.CharField(max_length=150)),
                ('Post', models.CharField(max_length=50)),
                ('Pin_No', models.PositiveIntegerField()),
                ('City', models.CharField(max_length=50)),
                ('State', models.CharField(choices=[('', 'Select State'), ('Andman & Nicobar Islands', 'Andman & Nicobar Islands'), ('Andhra Pradesh', 'Andhra Pradesh'), ('Arunachal Pradesh', 'Arunachal Pradesh'), ('Assam', 'Assam'), ('Bihar', 'Bihar'), ('Chandigarh', 'Chandigarh'), ('Chhattisgarh', 'Chhattisgarh'), ('Dadra & Nagr Haveli', 'Dadra & Nagr Haveli'), ('Daman & Diu', 'Daman & Diu'), ('Delhi', 'Delhi'), ('Goa', 'Goa'), ('Gujrat', 'Gujrat'), ('Haryana', 'Haryana'), ('Himachal Pradesh', 'Himachal Pradesh'), ('Jammu & Kashmir', 'Jammu & Kashmir'), ('Jharkhand', 'Jharkhand'), ('Karnataka', 'Karnataka'), ('Kerala', 'Kerala'), ('Lakshadweep', 'Lakshadweep'), ('Madhya Pradesh', 'Madhya Pradesh'), ('Maharashtra', 'Maharashtra'), ('Manipur', 'Manipur'), ('Meghalaya', 'Meghalaya'), ('Mizoram', 'Mizoram'), ('Nagaland', 'Nagaland'), ('Odisha', 'Odisha'), ('Puducherry', 'Puducherry'), ('Punjab', 'Punjab'), ('Rajasthan', 'Rajasthan'), ('Sikkim', 'Sikkim'), ('Tamil Nadu', 'Tamil Nadu'), ('Telangana', 'Telangana'), ('Tripura', 'Tripura'), ('Uttarakhand', 'Uttarakhand'), ('Uttar Pradesh', 'Uttar Pradesh'), ('West Bengal', 'West Bengal')], max_length=30)),
                ('Bed_Capacity', models.PositiveIntegerField(blank=True, null=True)),
                ('Opening_Days', models.CharField(blank=True, max_length=50)),
                ('Hospital_Timing', models.CharField(blank=True, max_length=50)),
                ('OPD_Timing', models.CharField(blank=True, max_length=50)),
                ('Emergency_Timing', models.CharField(blank=True, max_length=50)),
                ('Registration_No', models.CharField(max_length=25)),
                ('License_No', models.CharField(max_length=30)),
                ('Contact_No', models.PositiveIntegerField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Today_Live_Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Today_Status', models.BooleanField(default=False)),
                ('doctordetail', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='todayDoctorLive', to='hospitalAdmin.doctordetail')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Running_Live_Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Running_Prescription', models.PositiveIntegerField(default=0)),
                ('doctordetail', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='runningDoctorLive', to='hospitalAdmin.doctordetail')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('number', models.PositiveSmallIntegerField(default=0)),
                ('DoctorType', models.CharField(max_length=200)),
                ('First_Name', models.CharField(max_length=25)),
                ('Last_Name', models.CharField(max_length=30)),
                ('Age', models.PositiveIntegerField()),
                ('AgeType', models.CharField(choices=[('', 'Age Type'), ('Year', 'Year'), ('Month', 'Month'), ('Day', 'Day')], max_length=5)),
                ('Gender', models.CharField(max_length=10)),
                ('Contact_No', models.PositiveIntegerField()),
                ('Address', models.CharField(max_length=200)),
                ('Post', models.CharField(max_length=50)),
                ('Thana', models.CharField(max_length=50)),
                ('Pin_No', models.PositiveIntegerField()),
                ('City', models.CharField(max_length=50)),
                ('State', models.CharField(choices=[('', 'Select State'), ('Andman & Nicobar Islands', 'Andman & Nicobar Islands'), ('Andhra Pradesh', 'Andhra Pradesh'), ('Arunachal Pradesh', 'Arunachal Pradesh'), ('Assam', 'Assam'), ('Bihar', 'Bihar'), ('Chandigarh', 'Chandigarh'), ('Chhattisgarh', 'Chhattisgarh'), ('Dadra & Nagr Haveli', 'Dadra & Nagr Haveli'), ('Daman & Diu', 'Daman & Diu'), ('Delhi', 'Delhi'), ('Goa', 'Goa'), ('Gujrat', 'Gujrat'), ('Haryana', 'Haryana'), ('Himachal Pradesh', 'Himachal Pradesh'), ('Jammu & Kashmir', 'Jammu & Kashmir'), ('Jharkhand', 'Jharkhand'), ('Karnataka', 'Karnataka'), ('Kerala', 'Kerala'), ('Lakshadweep', 'Lakshadweep'), ('Madhya Pradesh', 'Madhya Pradesh'), ('Maharashtra', 'Maharashtra'), ('Manipur', 'Manipur'), ('Meghalaya', 'Meghalaya'), ('Mizoram', 'Mizoram'), ('Nagaland', 'Nagaland'), ('Odisha', 'Odisha'), ('Puducherry', 'Puducherry'), ('Punjab', 'Punjab'), ('Rajasthan', 'Rajasthan'), ('Sikkim', 'Sikkim'), ('Tamil Nadu', 'Tamil Nadu'), ('Telangana', 'Telangana'), ('Tripura', 'Tripura'), ('Uttarakhand', 'Uttarakhand'), ('Uttar Pradesh', 'Uttar Pradesh'), ('West Bengal', 'West Bengal')], max_length=50)),
                ('TermCondition', models.BooleanField(default=False)),
                ('is_seen', models.BooleanField(default=False)),
                ('view_detail', models.BooleanField(default=False)),
                ('prescription_seen', models.BooleanField(default=False)),
                ('Appointment_Date', models.DateField(null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('doctordetail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='hospitalAdmin.doctordetail')),
                ('hospitaldata', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitalAdmin.hospitaldata')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Prescribed',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('number', models.PositiveSmallIntegerField(default=0)),
                ('DoctorType', models.CharField(max_length=200)),
                ('First_Name', models.CharField(max_length=25)),
                ('Last_Name', models.CharField(max_length=30)),
                ('Age', models.PositiveIntegerField()),
                ('AgeType', models.CharField(choices=[('', 'Age Type'), ('Year', 'Year'), ('Month', 'Month'), ('Day', 'Day')], max_length=5)),
                ('Gender', models.CharField(max_length=10)),
                ('Contact_No', models.PositiveIntegerField()),
                ('Address', models.CharField(max_length=200)),
                ('Post', models.CharField(max_length=50)),
                ('Thana', models.CharField(max_length=50)),
                ('Pin_No', models.PositiveIntegerField()),
                ('City', models.CharField(max_length=50)),
                ('State', models.CharField(choices=[('', 'Select State'), ('Andman & Nicobar Islands', 'Andman & Nicobar Islands'), ('Andhra Pradesh', 'Andhra Pradesh'), ('Arunachal Pradesh', 'Arunachal Pradesh'), ('Assam', 'Assam'), ('Bihar', 'Bihar'), ('Chandigarh', 'Chandigarh'), ('Chhattisgarh', 'Chhattisgarh'), ('Dadra & Nagr Haveli', 'Dadra & Nagr Haveli'), ('Daman & Diu', 'Daman & Diu'), ('Delhi', 'Delhi'), ('Goa', 'Goa'), ('Gujrat', 'Gujrat'), ('Haryana', 'Haryana'), ('Himachal Pradesh', 'Himachal Pradesh'), ('Jammu & Kashmir', 'Jammu & Kashmir'), ('Jharkhand', 'Jharkhand'), ('Karnataka', 'Karnataka'), ('Kerala', 'Kerala'), ('Lakshadweep', 'Lakshadweep'), ('Madhya Pradesh', 'Madhya Pradesh'), ('Maharashtra', 'Maharashtra'), ('Manipur', 'Manipur'), ('Meghalaya', 'Meghalaya'), ('Mizoram', 'Mizoram'), ('Nagaland', 'Nagaland'), ('Odisha', 'Odisha'), ('Puducherry', 'Puducherry'), ('Punjab', 'Punjab'), ('Rajasthan', 'Rajasthan'), ('Sikkim', 'Sikkim'), ('Tamil Nadu', 'Tamil Nadu'), ('Telangana', 'Telangana'), ('Tripura', 'Tripura'), ('Uttarakhand', 'Uttarakhand'), ('Uttar Pradesh', 'Uttar Pradesh'), ('West Bengal', 'West Bengal')], max_length=50)),
                ('TermCondition', models.BooleanField(default=False)),
                ('is_seen', models.BooleanField(default=False)),
                ('view_detail', models.BooleanField(default=False)),
                ('prescription_seen', models.BooleanField(default=False)),
                ('Appointment_Date', models.DateField(null=True)),
                ('created', models.DateTimeField(null=True)),
                ('updated', models.DateTimeField(null=True)),
                ('doctordetail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescrbeds', to='hospitalAdmin.doctordetail')),
                ('hospitaldata', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitalAdmin.hospitaldata')),
            ],
        ),
        migrations.CreateModel(
            name='OtherDoctorDetail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('Other_Doctor_DIN', models.CharField(blank=True, max_length=8, unique=True)),
                ('Other_Doctor_Name', models.CharField(max_length=50)),
                ('Other_Doctor_Type', models.CharField(choices=[('', "Doctor's Type"), ('Dentist', 'Dentist'), ('ENT', 'Ear & Nose Throught'), ('Gynaecologist', 'Gynaecologist'), ('Orthopaedic surgeon', 'Orthopaedic surgeon'), ('Paediatrician', 'Paediatrician'), ('Psychiatrists', 'Psychiatrists'), ('Physician', 'Physician'), ('Neurologist', 'Neurologist'), ('Cardiologist', 'Cardiologist'), ('Radiologist', 'Radiologist'), ('Pulmonologist', 'Pulmonologist'), ('Endocrinologist', 'Endocrinologist'), ('Oncologist', 'Oncologist'), ('Cardiothoracic', 'Cardiothoracic'), ('Veterinarian', 'Veterinarian')], max_length=30)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('doctordetail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='otherdoctordetail', to='hospitalAdmin.doctordetail')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('Image', models.ImageField(blank=True, default='facility.png', upload_to='hospitalimg/')),
                ('ImageName', models.CharField(max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('doctordetail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='hospitalAdmin.doctordetail')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usr_images', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Hos_Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('Title', models.CharField(max_length=100)),
                ('Notice', models.CharField(max_length=200)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('doctordetail', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='hospitalAdmin.doctordetail')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('FacilityImg', models.ImageField(blank=True, default='facility.png', upload_to='facilityimg/')),
                ('FacilityName', models.CharField(max_length=100)),
                ('FacilityDesc', models.CharField(max_length=200)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('doctordetail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facilities', to='hospitalAdmin.doctordetail')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Employ',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('EmployImg', models.ImageField(default='avatar.png', upload_to='employimg/')),
                ('EmployName', models.CharField(max_length=100)),
                ('EmployDesc', models.CharField(max_length=200)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('doctordetail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='hospitalAdmin.doctordetail')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usr_employees', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='doctordetail',
            name='hospitaldata',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctorDatas', to='hospitalAdmin.hospitaldata'),
        ),
        migrations.AddField(
            model_name='doctordetail',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('Disease_Name', models.CharField(max_length=200)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('doctordetail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diseases', to='hospitalAdmin.doctordetail')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Current_Live_Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Current_Status', models.BooleanField(default=False)),
                ('doctordetail', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='currentDoctorLive', to='hospitalAdmin.doctordetail')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Complain_suggession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('First_Name', models.CharField(max_length=25)),
                ('Last_Name', models.CharField(max_length=30)),
                ('Contact_No', models.PositiveIntegerField()),
                ('City', models.CharField(max_length=100)),
                ('State', models.CharField(choices=[('', 'Select State'), ('Andman & Nicobar Islands', 'Andman & Nicobar Islands'), ('Andhra Pradesh', 'Andhra Pradesh'), ('Arunachal Pradesh', 'Arunachal Pradesh'), ('Assam', 'Assam'), ('Bihar', 'Bihar'), ('Chandigarh', 'Chandigarh'), ('Chhattisgarh', 'Chhattisgarh'), ('Dadra & Nagr Haveli', 'Dadra & Nagr Haveli'), ('Daman & Diu', 'Daman & Diu'), ('Delhi', 'Delhi'), ('Goa', 'Goa'), ('Gujrat', 'Gujrat'), ('Haryana', 'Haryana'), ('Himachal Pradesh', 'Himachal Pradesh'), ('Jammu & Kashmir', 'Jammu & Kashmir'), ('Jharkhand', 'Jharkhand'), ('Karnataka', 'Karnataka'), ('Kerala', 'Kerala'), ('Lakshadweep', 'Lakshadweep'), ('Madhya Pradesh', 'Madhya Pradesh'), ('Maharashtra', 'Maharashtra'), ('Manipur', 'Manipur'), ('Meghalaya', 'Meghalaya'), ('Mizoram', 'Mizoram'), ('Nagaland', 'Nagaland'), ('Odisha', 'Odisha'), ('Puducherry', 'Puducherry'), ('Punjab', 'Punjab'), ('Rajasthan', 'Rajasthan'), ('Sikkim', 'Sikkim'), ('Tamil Nadu', 'Tamil Nadu'), ('Telangana', 'Telangana'), ('Tripura', 'Tripura'), ('Uttarakhand', 'Uttarakhand'), ('Uttar Pradesh', 'Uttar Pradesh'), ('West Bengal', 'West Bengal')], max_length=50)),
                ('Subject', models.CharField(max_length=200)),
                ('is_seen', models.BooleanField(default=False)),
                ('view_detail', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('doctordetail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complains', to='hospitalAdmin.doctordetail')),
            ],
        ),
        migrations.CreateModel(
            name='Collected_Live_Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Collected_Prescription', models.PositiveIntegerField(default=0)),
                ('doctordetail', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='collectedDoctorLive', to='hospitalAdmin.doctordetail')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BookedPrescriptionStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('Appointment_Date', models.DateField(null=True)),
                ('Collected_No', models.PositiveIntegerField()),
                ('Booking_Status', models.BooleanField(default=True)),
                ('doctordetail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookedPrescriptions', to='hospitalAdmin.doctordetail')),
                ('hospitaldata', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitalAdmin.hospitaldata')),
            ],
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('Image', models.ImageField(blank=True, upload_to='achievementimg/')),
                ('Description', models.CharField(max_length=200)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('doctordetail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to='hospitalAdmin.doctordetail')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
