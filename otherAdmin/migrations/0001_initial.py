# Generated by Django 3.2.6 on 2022-03-18 20:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='OtherData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=150)),
                ('Logo', models.ImageField(blank=True, default='hospitalLogo.png', upload_to='otherlogo/')),
                ('Type', models.CharField(choices=[('', 'Services Type'), ('CT Scan', 'CT Scan'), ('Diagnostic Center', 'Diagnostic Center'), ('Digital X-Ray', 'Digital X-Ray'), ('MRI', 'MRI'), ('Pythology', 'Pythology'), ('Ultrasound', 'Ultrasound'), ('X-Ray', 'X-Ray')], max_length=100)),
                ('Address', models.CharField(max_length=150)),
                ('Post', models.CharField(max_length=50)),
                ('Pin_No', models.PositiveIntegerField()),
                ('City', models.CharField(max_length=50)),
                ('State', models.CharField(choices=[('', 'Select State'), ('Andman & Nicobar Islands', 'Andman & Nicobar Islands'), ('Andhra Pradesh', 'Andhra Pradesh'), ('Arunachal Pradesh', 'Arunachal Pradesh'), ('Assam', 'Assam'), ('Bihar', 'Bihar'), ('Chandigarh', 'Chandigarh'), ('Chhattisgarh', 'Chhattisgarh'), ('Dadra & Nagr Haveli', 'Dadra & Nagr Haveli'), ('Daman & Diu', 'Daman & Diu'), ('Delhi', 'Delhi'), ('Goa', 'Goa'), ('Gujrat', 'Gujrat'), ('Haryana', 'Haryana'), ('Himachal Pradesh', 'Himachal Pradesh'), ('Jammu & Kashmir', 'Jammu & Kashmir'), ('Jharkhand', 'Jharkhand'), ('Karnataka', 'Karnataka'), ('Kerala', 'Kerala'), ('Lakshadweep', 'Lakshadweep'), ('Madhya Pradesh', 'Madhya Pradesh'), ('Maharashtra', 'Maharashtra'), ('Manipur', 'Manipur'), ('Meghalaya', 'Meghalaya'), ('Mizoram', 'Mizoram'), ('Nagaland', 'Nagaland'), ('Odisha', 'Odisha'), ('Puducherry', 'Puducherry'), ('Punjab', 'Punjab'), ('Rajasthan', 'Rajasthan'), ('Sikkim', 'Sikkim'), ('Tamil Nadu', 'Tamil Nadu'), ('Telangana', 'Telangana'), ('Tripura', 'Tripura'), ('Uttarakhand', 'Uttarakhand'), ('Uttar Pradesh', 'Uttar Pradesh'), ('West Bengal', 'West Bengal')], max_length=30)),
                ('Opening_Days', models.CharField(blank=True, max_length=50)),
                ('Opening_Time', models.CharField(blank=True, max_length=50)),
                ('Payment_Mode', models.CharField(max_length=100)),
                ('Registration_No', models.CharField(max_length=25)),
                ('Contact_No_First', models.PositiveIntegerField()),
                ('Contact_No_Second', models.PositiveIntegerField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Today_Live_Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Today_Status', models.BooleanField(default=False)),
                ('otherdata', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='todayLive', to='otherAdmin.otherdata')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='otherTodayLive', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Running_Live_Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Running_Prescription', models.PositiveIntegerField(default=0)),
                ('otherdata', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='runningLive', to='otherAdmin.otherdata')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='otherRunningLive', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Other_Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('Notice', models.CharField(max_length=200)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('otherdata', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='othrNotifications', to='otherAdmin.otherdata')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('Image', models.ImageField(blank=True, upload_to='otherimg/')),
                ('ImageName', models.CharField(max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('otherdata', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='otherAdmin.otherdata')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='other_images', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Employ',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('Position', models.PositiveIntegerField(null=True)),
                ('Image', models.ImageField(blank=True, default='avatar.png', upload_to='other_employimg/')),
                ('Name', models.CharField(max_length=100, null=True)),
                ('Designation', models.CharField(max_length=200, null=True)),
                ('Degree', models.CharField(blank=True, max_length=100, null=True)),
                ('Experience', models.CharField(max_length=50, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('otherdata', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='otherAdmin.otherdata')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='other_employees', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Current_Live_Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Current_Status', models.BooleanField(default=False)),
                ('otherdata', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='currentLive', to='otherAdmin.otherdata')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='otherCurrentLive', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Complain_suggession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('First_Name', models.CharField(max_length=25)),
                ('Last_Name', models.CharField(max_length=30)),
                ('Contact_No', models.PositiveIntegerField()),
                ('City', models.CharField(max_length=100)),
                ('State', models.CharField(choices=[('', 'Select State'), ('Andman & Nicobar Islands', 'Andman & Nicobar Islands'), ('Andhra Pradesh', 'Andhra Pradesh'), ('Arunachal Pradesh', 'Arunachal Pradesh'), ('Assam', 'Assam'), ('Bihar', 'Bihar'), ('Chandigarh', 'Chandigarh'), ('Chhattisgarh', 'Chhattisgarh'), ('Dadra & Nagr Haveli', 'Dadra & Nagr Haveli'), ('Daman & Diu', 'Daman & Diu'), ('Delhi', 'Delhi'), ('Goa', 'Goa'), ('Gujrat', 'Gujrat'), ('Haryana', 'Haryana'), ('Himachal Pradesh', 'Himachal Pradesh'), ('Jammu & Kashmir', 'Jammu & Kashmir'), ('Jharkhand', 'Jharkhand'), ('Karnataka', 'Karnataka'), ('Kerala', 'Kerala'), ('Lakshadweep', 'Lakshadweep'), ('Madhya Pradesh', 'Madhya Pradesh'), ('Maharashtra', 'Maharashtra'), ('Manipur', 'Manipur'), ('Meghalaya', 'Meghalaya'), ('Mizoram', 'Mizoram'), ('Nagaland', 'Nagaland'), ('Odisha', 'Odisha'), ('Puducherry', 'Puducherry'), ('Punjab', 'Punjab'), ('Rajasthan', 'Rajasthan'), ('Sikkim', 'Sikkim'), ('Tamil Nadu', 'Tamil Nadu'), ('Telangana', 'Telangana'), ('Tripura', 'Tripura'), ('Uttarakhand', 'Uttarakhand'), ('Uttar Pradesh', 'Uttar Pradesh'), ('West Bengal', 'West Bengal')], max_length=50)),
                ('Subject', models.CharField(max_length=200)),
                ('is_seen', models.BooleanField(default=False)),
                ('view_detail', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('otherdata', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complains', to='otherAdmin.otherdata')),
            ],
        ),
        migrations.CreateModel(
            name='Collected_Live_Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Collected_Prescription', models.PositiveIntegerField(default=0)),
                ('otherdata', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='collectedLive', to='otherAdmin.otherdata')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='otherCollectedLive', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Checkup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=50)),
                ('Fees', models.PositiveIntegerField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('otherdata', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checkups', to='otherAdmin.otherdata')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
